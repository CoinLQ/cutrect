# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-26 07:58
from __future__ import unicode_literals

import db_file_storage.storage
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jwt_auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='批次名')),
                ('series', models.CharField(max_length=64, verbose_name='藏经版本名')),
                ('org', models.PositiveSmallIntegerField(choices=[(0, '阿里'), (1, '百度'), (2, '华南理工')], default=0, verbose_name='组织名称')),
                ('upload', models.FileField(null=True, upload_to='', verbose_name='上传批次数据')),
                ('submit_date', models.DateField(blank=True, null=True, verbose_name='提交时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'ordering': ('submit_date', 'name'),
                'verbose_name_plural': '批次管理',
                'verbose_name': '批次',
            },
        ),
        migrations.CreateModel(
            name='CCTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(blank=True, max_length=64, null=True, verbose_name='任务编号')),
                ('ttype', models.PositiveSmallIntegerField(choices=[(2, '置信度'), (1, '顺序校对'), (3, '聚类')], db_index=True, default=1, verbose_name='切分方式')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='任务格式化描述')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '未领取'), (1, '已领取'), (2, '处理中'), (3, '已过期'), (4, '已作废'), (5, '已完成')], db_index=True, default=0, verbose_name='任务状态')),
                ('update_date', models.DateField(null=True, verbose_name='最近处理时间')),
                ('count', models.IntegerField(verbose_name='任务字块数')),
                ('cc_threshold', models.FloatField(verbose_name='最高置信度')),
                ('rect_set', models.TextField(null=True, verbose_name='字块集')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cc_tasks', to='jwt_auth.Staff')),
            ],
            options={
                'ordering': ('number', 'status'),
                'verbose_name_plural': '切分任务管理',
                'verbose_name': '切分任务',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClassifyTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(blank=True, max_length=64, null=True, verbose_name='任务编号')),
                ('ttype', models.PositiveSmallIntegerField(choices=[(2, '置信度'), (1, '顺序校对'), (3, '聚类')], db_index=True, default=1, verbose_name='切分方式')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='任务格式化描述')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '未领取'), (1, '已领取'), (2, '处理中'), (3, '已过期'), (4, '已作废'), (5, '已完成')], db_index=True, default=0, verbose_name='任务状态')),
                ('update_date', models.DateField(null=True, verbose_name='最近处理时间')),
                ('count', models.IntegerField(verbose_name='任务字块数')),
                ('char_set', models.TextField(blank=True, null=True, verbose_name='字符集')),
                ('rect_set', models.TextField(null=True, verbose_name='字块集')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clsfiy_tasks', to='jwt_auth.Staff')),
            ],
            options={
                'ordering': ('number', 'status'),
                'verbose_name_plural': '切分任务管理',
                'verbose_name': '切分任务',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OColumn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='页的切列编码')),
                ('location', models.CharField(max_length=64, null=True, verbose_name='位置坐标参数')),
                ('s3_inset', models.FileField(blank=True, null=True, storage='storages.backends.s3boto.S3BotoStorage', upload_to='tripitaka/hans', verbose_name='s3地址')),
            ],
            options={
                'ordering': ('code',),
                'verbose_name_plural': '原始页管理',
                'verbose_name': '原始页',
            },
        ),
        migrations.CreateModel(
            name='OPage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='原始页编码')),
                ('s3_inset', models.FileField(blank=True, null=True, storage='storages.backends.s3boto.S3BotoStorage', upload_to='tripitaka/hans', verbose_name='s3地址')),
            ],
            options={
                'ordering': ('code',),
                'verbose_name_plural': '原始页管理',
                'verbose_name': '原始页',
            },
        ),
        migrations.CreateModel(
            name='PageRect',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=64, null=True, verbose_name='关联页ID')),
                ('line_count', models.IntegerField(blank=True, null=True, verbose_name='最大行数')),
                ('column_count', models.IntegerField(blank=True, null=True, verbose_name='最大列数')),
                ('rect_set', models.TextField(blank=True, null=True, verbose_name='切字块数据集')),
                ('create_date', models.DateField(blank=True, null=True, verbose_name='创建时间')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pagerects', to='rect.Batch', verbose_name='批次')),
            ],
            options={
                'ordering': ('create_date',),
                'verbose_name_plural': '源-切分页管理',
                'verbose_name': '源-切分页',
            },
        ),
        migrations.CreateModel(
            name='PageTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('number', models.CharField(blank=True, max_length=64, null=True, verbose_name='任务编号')),
                ('ttype', models.PositiveSmallIntegerField(choices=[(2, '置信度'), (1, '顺序校对'), (3, '聚类')], db_index=True, default=1, verbose_name='切分方式')),
                ('desc', models.TextField(blank=True, null=True, verbose_name='任务格式化描述')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '未领取'), (1, '已领取'), (2, '处理中'), (3, '已过期'), (4, '已作废'), (5, '已完成')], db_index=True, default=0, verbose_name='任务状态')),
                ('update_date', models.DateField(null=True, verbose_name='最近处理时间')),
                ('count', models.IntegerField(verbose_name='页的数量')),
                ('page_set', models.TextField(null=True, verbose_name='页的集合')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page_tasks', to='jwt_auth.Staff')),
            ],
            options={
                'ordering': ('number', 'status'),
                'verbose_name_plural': '切分任务管理',
                'verbose_name': '切分任务',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rect',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='类型')),
                ('x', models.PositiveSmallIntegerField(default=0, verbose_name='X坐标')),
                ('y', models.PositiveSmallIntegerField(default=0, verbose_name='Y坐标')),
                ('w', models.PositiveSmallIntegerField(default=1, verbose_name='宽度')),
                ('h', models.PositiveSmallIntegerField(default=1, verbose_name='高度')),
                ('ln', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='行号')),
                ('cn', models.PositiveSmallIntegerField(blank=True, default=0, null=True, verbose_name='列号')),
                ('cc', models.FloatField(blank=True, db_index=True, default=1, null=True, verbose_name='切分置信度')),
                ('word', models.CharField(blank=True, db_index=True, default='', max_length=4, null=True, verbose_name='汉字')),
                ('wcc', models.FloatField(blank=True, db_index=True, default=1, null=True, verbose_name='文字置信度')),
                ('ts', models.CharField(blank=True, db_index=True, default='', max_length=4, null=True, verbose_name='标字')),
                ('inset', models.FileField(blank=True, help_text='嵌入临时截图', null=True, storage=db_file_storage.storage.DatabaseFileStorage(), upload_to='core.DBPicture/bytes/filename/mimetype')),
                ('s3_inset', models.FileField(blank=True, null=True, storage='storages.backends.s3boto.S3BotoStorage', upload_to='tripitaka/hans', verbose_name='s3地址')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rects', to='rect.Batch', verbose_name='批次')),
                ('page_rect', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rects', to='rect.PageRect', verbose_name='源-切分页')),
            ],
            options={
                'ordering': ('-cc',),
                'verbose_name_plural': '源-切字块管理',
                'verbose_name': '源-切字块',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, verbose_name='切分计划名')),
                ('type', models.PositiveSmallIntegerField(choices=[(2, '置信度'), (1, '顺序校对'), (3, '聚类')], db_index=True, default=1, verbose_name='切分方式')),
                ('desc', models.CharField(blank=True, max_length=256, null=True, verbose_name='计划格式化描述')),
                ('user_group', models.CharField(blank=True, db_index=True, max_length=64, null=True, verbose_name='分配组')),
                ('status', models.PositiveSmallIntegerField(blank=True, choices=[(0, '未激活'), (1, '已激活'), (2, '已过期'), (3, '已作废'), (4, '已完成')], db_index=True, default=1, null=True, verbose_name='计划状态')),
                ('end_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='截止日期')),
                ('create_date', models.DateField(blank=True, null=True, verbose_name='创建日期')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedules', to='rect.Batch', verbose_name='批次')),
            ],
            options={
                'ordering': ('end_date', 'name', 'status'),
                'verbose_name_plural': '切分计划管理',
                'verbose_name': '切分计划',
            },
        ),
        migrations.AddField(
            model_name='pagetask',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='page_tasks', to='rect.Schedule', verbose_name='切分计划'),
        ),
        migrations.AddField(
            model_name='ocolumn',
            name='opage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ocolumns', to='rect.OPage', verbose_name='原始页'),
        ),
        migrations.AddField(
            model_name='classifytask',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classify_tasks', to='rect.Schedule', verbose_name='切分计划'),
        ),
        migrations.AddField(
            model_name='cctask',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cc_tasks', to='rect.Schedule', verbose_name='切分计划'),
        ),
    ]
